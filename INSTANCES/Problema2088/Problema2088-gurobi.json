{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.0509090909090909,
        "start_time": [
            [
                101,
                34,
                3,
                16,
                20,
                1,
                17,
                66,
                95,
                9
            ],
            [
                1,
                0,
                67,
                94,
                12,
                66,
                6,
                34,
                74,
                8
            ],
            [
                43,
                1,
                8,
                97,
                15,
                16,
                33,
                4,
                37,
                47
            ],
            [
                16,
                90,
                78,
                0,
                74,
                22,
                36,
                100,
                26,
                110
            ],
            [
                44,
                54,
                42,
                53,
                19,
                13,
                65,
                59,
                3,
                86
            ],
            [
                65,
                43,
                90,
                18,
                1,
                0,
                34,
                33,
                13,
                73
            ],
            [
                15,
                53,
                6,
                17,
                55,
                48,
                90,
                0,
                101,
                30
            ],
            [
                77,
                42,
                44,
                59,
                0,
                37,
                61,
                8,
                1,
                29
            ],
            [
                53,
                78,
                74,
                37,
                65,
                80,
                96,
                95,
                69,
                83
            ],
            [
                17,
                60,
                43,
                70,
                88,
                73,
                86,
                71,
                44,
                91
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        ],
        "_output_item": "Objective function: 0.0509090909090909 + 0.0 = 0.0509090909090909 \nObjective function : M-115.0 + E-9384.0 = 0.0509090909090909 \nStart Times: [101, 34, 3, 16, 20, 1, 17, 66, 95, 9, 1, 0, 67, 94, 12, 66, 6, 34, 74, 8, 43, 1, 8, 97, 15, 16, 33, 4, 37, 47, 16, 90, 78, 0, 74, 22, 36, 100, 26, 110, 44, 54, 42, 53, 19, 13, 65, 59, 3, 86, 65, 43, 90, 18, 1, 0, 34, 33, 13, 73, 15, 53, 6, 17, 55, 48, 90, 0, 101, 30, 77, 42, 44, 59, 0, 37, 61, 8, 1, 29, 53, 78, 74, 37, 65, 80, 96, 95, 69, 83, 17, 60, 43, 70, 88, 73, 86, 71, 44, 91]\nSpeed Scaling; [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1101,
        "flatFloatVars": 2,
        "flatIntConstraints": 2001,
        "flatFloatConstraints": 2,
        "evaluatedHalfReifiedConstraints": 900,
        "method": "minimize",
        "flatTime": 189.384,
        "objective": 0.0509090909091,
        "objectiveBound": 0.0509090909091,
        "nodes": 1,
        "solveTime": 903.5,
        "time": 744.0,
        "nSolutions": 25
    }
}