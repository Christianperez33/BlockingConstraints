{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.01669449081803009,
        "start_time": [
            [
                381,
                285,
                436,
                127,
                588,
                615,
                401,
                643,
                207,
                98,
                146,
                220,
                279,
                174,
                345,
                490,
                60,
                470,
                314,
                659
            ],
            [
                313,
                436,
                428,
                151,
                204,
                254,
                620,
                281,
                57,
                396,
                659,
                78,
                104,
                496,
                526,
                10,
                563,
                340,
                586,
                703
            ],
            [
                132,
                593,
                623,
                558,
                126,
                198,
                63,
                50,
                230,
                268,
                503,
                326,
                477,
                526,
                309,
                389,
                368,
                440,
                86,
                383
            ],
            [
                589,
                49,
                669,
                488,
                535,
                230,
                0,
                432,
                293,
                360,
                318,
                631,
                150,
                244,
                479,
                79,
                396,
                561,
                184,
                354
            ],
            [
                198,
                496,
                588,
                244,
                561,
                134,
                327,
                97,
                605,
                665,
                381,
                281,
                541,
                472,
                69,
                640,
                305,
                50,
                408,
                627
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.01669449081803009 + E-0.0 + T--0.0 = 0.01669449081803009 \nObjective function : M-711.0 + E-7374.0 + T--0.0 = 0.01669449081803009 \nStart Times: [381, 285, 436, 127, 588, 615, 401, 643, 207, 98, 146, 220, 279, 174, 345, 490, 60, 470, 314, 659, 313, 436, 428, 151, 204, 254, 620, 281, 57, 396, 659, 78, 104, 496, 526, 10, 563, 340, 586, 703, 132, 593, 623, 558, 126, 198, 63, 50, 230, 268, 503, 326, 477, 526, 309, 389, 368, 440, 86, 383, 589, 49, 669, 488, 535, 230, 0, 432, 293, 360, 318, 631, 150, 244, 479, 79, 396, 561, 184, 354, 198, 496, 588, 244, 561, 134, 327, 97, 605, 665, 381, 281, 541, 472, 69, 640, 305, 50, 408, 627]\nSpeed Scaling; [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 737,
        "flatFloatVars": 9,
        "flatIntConstraints": 1997,
        "flatFloatConstraints": 9,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 150.225,
        "objective": 0.016694490818,
        "objectiveBound": 0.016694490818,
        "nodes": 1,
        "solveTime": 351.8,
        "time": 342.0,
        "nSolutions": 1
    }
}