{
    "status": "SATISFIED",
    "solution": {
        "objective": 0.8313276110560095,
        "start_time": [
            [
                207,
                212,
                310,
                139,
                128,
                242,
                282,
                80,
                153,
                266,
                202,
                225,
                190,
                245,
                142,
                115,
                301,
                181,
                261,
                126
            ],
            [
                260,
                184,
                87,
                40,
                240,
                208,
                70,
                122,
                255,
                114,
                275,
                289,
                202,
                51,
                85,
                164,
                83,
                133,
                165,
                195
            ],
            [
                138,
                229,
                316,
                113,
                284,
                202,
                168,
                261,
                209,
                122,
                157,
                258,
                307,
                186,
                107,
                90,
                183,
                259,
                274,
                220
            ],
            [
                100,
                299,
                284,
                126,
                209,
                158,
                135,
                177,
                196,
                107,
                150,
                267,
                157,
                113,
                106,
                251,
                186,
                219,
                112,
                101
            ],
            [
                297,
                60,
                230,
                152,
                82,
                105,
                186,
                51,
                50,
                138,
                298,
                49,
                166,
                273,
                71,
                27,
                314,
                43,
                0,
                40
            ]
        ],
        "SpeedScaling": [
            [
                2,
                3,
                1,
                3,
                3,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                1,
                2,
                2
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                1,
                2,
                1,
                1,
                2,
                1,
                3,
                1,
                1,
                1,
                1,
                2
            ],
            [
                2,
                1,
                1,
                1,
                1,
                1,
                3,
                3,
                2,
                1,
                2,
                2,
                1,
                1,
                3,
                1,
                1,
                2,
                1,
                1
            ],
            [
                2,
                1,
                1,
                2,
                2,
                1,
                1,
                2,
                2,
                3,
                3,
                2,
                1,
                2,
                3,
                1,
                2,
                1,
                2,
                3
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                3,
                1,
                1,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.09561060408518038 + E-0.5234567901234563 + T-0.2122602168473728 = 0.8313276110560095 \nObjective function : M-317.0 + E-8821.0 + T-509.0 = 0.8313276110560095 \nStart Times: [207, 212, 310, 139, 128, 242, 282, 80, 153, 266, 202, 225, 190, 245, 142, 115, 301, 181, 261, 126, 260, 184, 87, 40, 240, 208, 70, 122, 255, 114, 275, 289, 202, 51, 85, 164, 83, 133, 165, 195, 138, 229, 316, 113, 284, 202, 168, 261, 209, 122, 157, 258, 307, 186, 107, 90, 183, 259, 274, 220, 100, 299, 284, 126, 209, 158, 135, 177, 196, 107, 150, 267, 157, 113, 106, 251, 186, 219, 112, 101, 297, 60, 230, 152, 82, 105, 186, 51, 50, 138, 298, 49, 166, 273, 71, 27, 314, 43, 0, 40]\nSpeed Scaling; [2, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 1, 2, 1, 3, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 3, 2, 1, 2, 2, 1, 1, 3, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 3, 3, 2, 1, 2, 3, 1, 2, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1307,
        "flatFloatVars": 104,
        "flatIntConstraints": 2378,
        "flatFloatConstraints": 104,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 252.65900000000002,
        "objective": 0.831327611056,
        "objectiveBound": 0.826690510503,
        "nodes": 73645,
        "solveTime": 57550.2,
        "time": 44085.0,
        "openNodes": 22896,
        "nSolutions": 29
    }
}