{
    "status": "SATISFIED",
    "solution": {
        "objective": 0.5632585846085086,
        "start_time": [
            [
                1466,
                300,
                661,
                520,
                1413,
                1312,
                1354,
                1094,
                1528,
                794,
                172,
                611,
                916,
                1154,
                80,
                351,
                570,
                259,
                110,
                1048
            ],
            [
                312,
                421,
                877,
                1639,
                50,
                622,
                548,
                1502,
                667,
                1392,
                910,
                184,
                815,
                766,
                110,
                1286,
                1349,
                1202,
                1068,
                1557
            ],
            [
                151,
                249,
                1470,
                353,
                94,
                1359,
                300,
                459,
                40,
                411,
                106,
                705,
                1203,
                893,
                507,
                213,
                1112,
                1059,
                1265,
                840
            ],
            [
                1210,
                220,
                571,
                444,
                1009,
                133,
                650,
                350,
                94,
                950,
                797,
                1166,
                489,
                397,
                257,
                20,
                611,
                1309,
                897,
                545
            ],
            [
                506,
                41,
                212,
                1561,
                129,
                551,
                894,
                667,
                590,
                1200,
                1260,
                840,
                1154,
                1059,
                409,
                941,
                1622,
                1390,
                0,
                461
            ]
        ],
        "SpeedScaling": [
            [
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                2,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2
            ],
            [
                1,
                1,
                3,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                2,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                3,
                1,
                2,
                1,
                2,
                1,
                3,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                2,
                1,
                2,
                1,
                1,
                1,
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                1,
                2,
                1,
                2,
                1
            ],
            [
                2,
                1,
                1,
                2,
                1,
                2,
                2,
                1,
                1,
                2,
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                3,
                2
            ]
        ],
        "_output_item": "Objective function normalized: M-0.08211344922232387 + E-0.389434119858008 + T-0.09171101552817672 = 0.5632585846085086 \nObjective function : M-1678.0 + E-4930.0 + T-1258.0 = 0.5632585846085086 \nStart Times: [1466, 300, 661, 520, 1413, 1312, 1354, 1094, 1528, 794, 172, 611, 916, 1154, 80, 351, 570, 259, 110, 1048, 312, 421, 877, 1639, 50, 622, 548, 1502, 667, 1392, 910, 184, 815, 766, 110, 1286, 1349, 1202, 1068, 1557, 151, 249, 1470, 353, 94, 1359, 300, 459, 40, 411, 106, 705, 1203, 893, 507, 213, 1112, 1059, 1265, 840, 1210, 220, 571, 444, 1009, 133, 650, 350, 94, 950, 797, 1166, 489, 397, 257, 20, 611, 1309, 897, 545, 506, 41, 212, 1561, 129, 551, 894, 667, 590, 1200, 1260, 840, 1154, 1059, 409, 941, 1622, 1390, 0, 461]\nSpeed Scaling; [2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 3, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 3, 2]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1337,
        "flatFloatVars": 110,
        "flatIntConstraints": 2402,
        "flatFloatConstraints": 110,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 203.178,
        "objective": 0.563258584609,
        "objectiveBound": 0.553343381721,
        "nodes": 24331,
        "openNodes": 6068,
        "solveTime": 57334.0,
        "time": 55022.0,
        "nSolutions": 22
    }
}