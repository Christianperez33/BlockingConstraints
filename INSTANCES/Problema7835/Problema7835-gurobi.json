{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.7911955332106198,
        "start_time": [
            [
                203,
                50,
                144,
                171,
                153,
                10,
                142,
                244,
                325,
                110,
                201,
                128,
                30,
                306,
                80,
                288,
                245,
                297,
                287,
                275
            ],
            [
                152,
                99,
                213,
                249,
                211,
                84,
                23,
                289,
                137,
                134,
                0,
                297,
                225,
                145,
                231,
                248,
                1,
                221,
                111,
                180
            ],
            [
                193,
                111,
                10,
                209,
                288,
                223,
                165,
                147,
                196,
                54,
                289,
                195,
                222,
                40,
                275,
                309,
                124,
                136,
                76,
                242
            ],
            [
                315,
                40,
                241,
                222,
                233,
                117,
                276,
                298,
                67,
                46,
                157,
                175,
                160,
                95,
                54,
                215,
                137,
                193,
                328,
                290
            ],
            [
                90,
                148,
                310,
                299,
                181,
                35,
                147,
                74,
                170,
                238,
                86,
                10,
                60,
                269,
                180,
                100,
                202,
                13,
                136,
                167
            ]
        ],
        "SpeedScaling": [
            [
                1,
                2,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                2,
                1,
                1,
                3,
                1,
                1,
                1,
                1,
                4,
                1,
                2
            ],
            [
                3,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                5,
                1,
                2,
                2,
                2,
                2,
                1,
                1,
                5,
                1,
                1,
                1
            ],
            [
                3,
                3,
                1,
                1,
                1,
                2,
                1,
                4,
                1,
                2,
                1,
                3,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                2
            ],
            [
                1,
                1,
                2,
                1,
                2,
                1,
                1,
                5,
                2,
                4,
                1,
                1,
                4,
                1,
                1,
                1,
                1,
                2,
                2,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.07513812154696131 + E-0.4692264257481654 + T-0.246830985915493 = 0.7911955332106198 \nObjective function : M-329.0 + E-8574.0 + T-701.0 = 0.7911955332106198 \nStart Times: [203, 50, 144, 171, 153, 10, 142, 244, 325, 110, 201, 128, 30, 306, 80, 288, 245, 297, 287, 275, 152, 99, 213, 249, 211, 84, 23, 289, 137, 134, 0, 297, 225, 145, 231, 248, 1, 221, 111, 180, 193, 111, 10, 209, 288, 223, 165, 147, 196, 54, 289, 195, 222, 40, 275, 309, 124, 136, 76, 242, 315, 40, 241, 222, 233, 117, 276, 298, 67, 46, 157, 175, 160, 95, 54, 215, 137, 193, 328, 290, 90, 148, 310, 299, 181, 35, 147, 74, 170, 238, 86, 10, 60, 269, 180, 100, 202, 13, 136, 167]\nSpeed Scaling; [1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 4, 1, 2, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 2, 2, 2, 2, 1, 1, 5, 1, 1, 1, 3, 3, 1, 1, 1, 2, 1, 4, 1, 2, 1, 3, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 5, 2, 4, 1, 1, 4, 1, 1, 1, 1, 2, 2, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1481,
        "flatFloatVars": 102,
        "flatIntConstraints": 2370,
        "flatFloatConstraints": 102,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 228.314,
        "objective": 0.791195533211,
        "objectiveBound": 0.791195533211,
        "nodes": 45327,
        "solveTime": 45566.200000000004,
        "time": 44059.0,
        "openNodes": 1385,
        "nSolutions": 40
    }
}