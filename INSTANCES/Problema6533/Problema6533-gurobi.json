{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.7484357158545105,
        "start_time": [
            [
                279,
                824,
                651,
                472,
                373,
                534,
                1178,
                994,
                857,
                1059,
                152,
                1110,
                772,
                570,
                103,
                417,
                1232,
                697,
                737,
                222
            ],
            [
                320,
                1152,
                841,
                339,
                476,
                1098,
                1008,
                151,
                74,
                252,
                976,
                964,
                41,
                617,
                532,
                907,
                754,
                637,
                99,
                688
            ],
            [
                480,
                614,
                1117,
                100,
                437,
                267,
                227,
                712,
                1267,
                362,
                1058,
                787,
                722,
                660,
                1006,
                158,
                884,
                1171,
                404,
                1355
            ],
            [
                712,
                134,
                763,
                815,
                214,
                1162,
                859,
                645,
                1106,
                106,
                476,
                1265,
                403,
                249,
                916,
                1326,
                1022,
                548,
                1224,
                362
            ],
            [
                147,
                563,
                22,
                667,
                927,
                330,
                780,
                393,
                712,
                970,
                229,
                487,
                1113,
                523,
                195,
                841,
                614,
                0,
                282,
                263
            ]
        ],
        "SpeedScaling": [
            [
                4,
                2,
                2,
                2,
                1,
                2,
                2,
                2,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                2,
                2,
                2
            ],
            [
                3,
                1,
                2,
                1,
                2,
                2,
                2,
                2,
                1,
                2,
                1,
                2,
                3,
                2,
                2,
                2,
                1,
                1,
                2,
                2
            ],
            [
                1,
                4,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                2,
                2,
                2,
                3
            ],
            [
                2,
                1,
                2,
                2,
                3,
                2,
                2,
                1,
                2,
                2,
                2,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                3,
                2,
                1,
                2,
                2,
                2,
                1,
                1,
                2,
                2,
                1,
                3,
                2,
                2,
                2,
                2,
                2,
                3,
                2,
                2
            ]
        ],
        "_output_item": "Objective function normalized: M-0.06915270238376209 + E-0.5978771177791385 + T-0.08140589569160998 = 0.7484357158545105 \nObjective function: M-1398.0 + E-5944.0 + T-1077.0 = 0.7484357158545105 \nStart Times: [279, 824, 651, 472, 373, 534, 1178, 994, 857, 1059, 152, 1110, 772, 570, 103, 417, 1232, 697, 737, 222, 320, 1152, 841, 339, 476, 1098, 1008, 151, 74, 252, 976, 964, 41, 617, 532, 907, 754, 637, 99, 688, 480, 614, 1117, 100, 437, 267, 227, 712, 1267, 362, 1058, 787, 722, 660, 1006, 158, 884, 1171, 404, 1355, 712, 134, 763, 815, 214, 1162, 859, 645, 1106, 106, 476, 1265, 403, 249, 916, 1326, 1022, 548, 1224, 362, 147, 563, 22, 667, 927, 330, 780, 393, 712, 970, 229, 487, 1113, 523, 195, 841, 614, 0, 282, 263]\nSpeed Scaling; [4, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 3, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 3, 2, 2, 2, 1, 1, 2, 2, 1, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 3, 2, 1, 2, 2, 3, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 3, 2, 2, 2, 2, 2, 3, 2, 2]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 2091,
        "flatFloatVars": 204,
        "flatIntConstraints": 3141,
        "flatFloatConstraints": 204,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 246.62300000000002,
        "objective": 0.748435715855,
        "objectiveBound": 0.748435715855,
        "nodes": 14661,
        "solveTime": 178151.0,
        "time": 57273.0,
        "openNodes": 687,
        "nSolutions": 46
    }
}