{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.02311248073959937,
        "start_time": [
            [
                695,
                80,
                168,
                199,
                560,
                365,
                342,
                541,
                667,
                797,
                479,
                233,
                610,
                743,
                315,
                468,
                125,
                277,
                717,
                214
            ],
            [
                281,
                0,
                491,
                331,
                420,
                226,
                452,
                722,
                398,
                744,
                380,
                128,
                821,
                33,
                145,
                353,
                44,
                178,
                512,
                776
            ],
            [
                331,
                135,
                207,
                292,
                597,
                415,
                179,
                20,
                783,
                188,
                552,
                40,
                368,
                463,
                95,
                282,
                272,
                446,
                496,
                83
            ],
            [
                177,
                474,
                413,
                511,
                693,
                326,
                190,
                672,
                118,
                571,
                625,
                363,
                765,
                236,
                430,
                60,
                284,
                738,
                819,
                396
            ],
            [
                468,
                33,
                360,
                231,
                621,
                809,
                709,
                486,
                301,
                520,
                675,
                96,
                171,
                80,
                846,
                411,
                189,
                157,
                128,
                292
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.02311248073959937 + E-0.0 + T--0.0 = 0.02311248073959937 \nObjective function : M-856.0 + E-7159.0 + T--0.0 = 0.02311248073959937 \nStart Times: [695, 80, 168, 199, 560, 365, 342, 541, 667, 797, 479, 233, 610, 743, 315, 468, 125, 277, 717, 214, 281, 0, 491, 331, 420, 226, 452, 722, 398, 744, 380, 128, 821, 33, 145, 353, 44, 178, 512, 776, 331, 135, 207, 292, 597, 415, 179, 20, 783, 188, 552, 40, 368, 463, 95, 282, 272, 446, 496, 83, 177, 474, 413, 511, 693, 326, 190, 672, 118, 571, 625, 363, 765, 236, 430, 60, 284, 738, 819, 396, 468, 33, 360, 231, 621, 809, 709, 486, 301, 520, 675, 96, 171, 80, 846, 411, 189, 157, 128, 292]\nSpeed Scaling; [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 737,
        "flatFloatVars": 9,
        "flatIntConstraints": 1997,
        "flatFloatConstraints": 9,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 165.139,
        "objective": 0.0231124807396,
        "objectiveBound": 0.0231124807396,
        "nodes": 0,
        "openNodes": 1,
        "solveTime": 159.0,
        "time": 342.0,
        "nSolutions": 1
    }
}