{
    "status": "SATISFIED",
    "solution": {
        "objective": 1.04537358738112,
        "start_time": [
            [
                256,
                158,
                98,
                148,
                90
            ],
            [
                99,
                115,
                95,
                263,
                233
            ],
            [
                69,
                133,
                50,
                90,
                100
            ],
            [
                123,
                63,
                81,
                127,
                70
            ],
            [
                199,
                114,
                64,
                109,
                40
            ],
            [
                228,
                195,
                155,
                100,
                138
            ],
            [
                0,
                11,
                235,
                181,
                168
            ],
            [
                164,
                128,
                101,
                45,
                42
            ],
            [
                20,
                148,
                169,
                188,
                30
            ],
            [
                150,
                227,
                127,
                113,
                60
            ],
            [
                24,
                35,
                128,
                208,
                144
            ],
            [
                43,
                68,
                18,
                274,
                10
            ],
            [
                127,
                235,
                200,
                119,
                181
            ],
            [
                96,
                248,
                138,
                139,
                125
            ],
            [
                39,
                101,
                171,
                85,
                45
            ],
            [
                32,
                58,
                0,
                273,
                115
            ],
            [
                113,
                52,
                34,
                20,
                25
            ],
            [
                124,
                45,
                55,
                25,
                81
            ],
            [
                219,
                177,
                162,
                105,
                121
            ],
            [
                56,
                50,
                54,
                242,
                55
            ],
            [
                9,
                40,
                240,
                1,
                0
            ],
            [
                143,
                102,
                113,
                226,
                191
            ],
            [
                90,
                108,
                140,
                118,
                96
            ],
            [
                65,
                60,
                63,
                159,
                85
            ],
            [
                243,
                155,
                105,
                145,
                143
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                3,
                1,
                3
            ],
            [
                1,
                2,
                4,
                2,
                1
            ],
            [
                5,
                2,
                2,
                4,
                2
            ],
            [
                1,
                5,
                2,
                2,
                2
            ],
            [
                1,
                2,
                5,
                2,
                2
            ],
            [
                2,
                3,
                1,
                4,
                3
            ],
            [
                3,
                2,
                2,
                1,
                1
            ],
            [
                1,
                5,
                2,
                2,
                3
            ],
            [
                2,
                3,
                1,
                1,
                3
            ],
            [
                2,
                1,
                2,
                2,
                1
            ],
            [
                3,
                1,
                1,
                2,
                1
            ],
            [
                3,
                2,
                2,
                1,
                2
            ],
            [
                1,
                1,
                1,
                5,
                2
            ],
            [
                1,
                1,
                1,
                1,
                4
            ],
            [
                2,
                2,
                1,
                1,
                2
            ],
            [
                1,
                1,
                4,
                1,
                2
            ],
            [
                1,
                3,
                2,
                3,
                3
            ],
            [
                1,
                5,
                1,
                1,
                1
            ],
            [
                1,
                2,
                2,
                4,
                2
            ],
            [
                4,
                2,
                2,
                1,
                4
            ],
            [
                3,
                1,
                1,
                2,
                1
            ],
            [
                2,
                3,
                4,
                2,
                1
            ],
            [
                2,
                1,
                2,
                1,
                4
            ],
            [
                4,
                1,
                1,
                1,
                2
            ],
            [
                1,
                1,
                2,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.07510521204273228 + E-0.6749877630934897 + T-0.2952806122448979 = 1.04537358738112 \nObjective function: M-279.0 + E-11307.0 + T-926.0 = 1.04537358738112 \nStart Times: [256, 158, 98, 148, 90, 99, 115, 95, 263, 233, 69, 133, 50, 90, 100, 123, 63, 81, 127, 70, 199, 114, 64, 109, 40, 228, 195, 155, 100, 138, 0, 11, 235, 181, 168, 164, 128, 101, 45, 42, 20, 148, 169, 188, 30, 150, 227, 127, 113, 60, 24, 35, 128, 208, 144, 43, 68, 18, 274, 10, 127, 235, 200, 119, 181, 96, 248, 138, 139, 125, 39, 101, 171, 85, 45, 32, 58, 0, 273, 115, 113, 52, 34, 20, 25, 124, 45, 55, 25, 81, 219, 177, 162, 105, 121, 56, 50, 54, 242, 55, 9, 40, 240, 1, 0, 143, 102, 113, 226, 191, 90, 108, 140, 118, 96, 65, 60, 63, 159, 85, 243, 155, 105, 145, 143]\nSpeed Scaling; [1, 1, 3, 1, 3, 1, 2, 4, 2, 1, 5, 2, 2, 4, 2, 1, 5, 2, 2, 2, 1, 2, 5, 2, 2, 2, 3, 1, 4, 3, 3, 2, 2, 1, 1, 1, 5, 2, 2, 3, 2, 3, 1, 1, 3, 2, 1, 2, 2, 1, 3, 1, 1, 2, 1, 3, 2, 2, 1, 2, 1, 1, 1, 5, 2, 1, 1, 1, 1, 4, 2, 2, 1, 1, 2, 1, 1, 4, 1, 2, 1, 3, 2, 3, 3, 1, 5, 1, 1, 1, 1, 2, 2, 4, 2, 4, 2, 2, 1, 4, 3, 1, 1, 2, 1, 2, 3, 4, 2, 1, 2, 1, 2, 1, 4, 4, 1, 1, 1, 2, 1, 1, 2, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 5035,
        "flatFloatVars": 243,
        "flatIntConstraints": 6681,
        "flatFloatConstraints": 243,
        "evaluatedHalfReifiedConstraints": 3000,
        "method": "minimize",
        "flatTime": 622.674,
        "objective": 1.04537358738,
        "objectiveBound": 0.84178059089,
        "nodes": 1075,
        "openNodes": 494,
        "solveTime": 207122.7,
        "time": 206969.0,
        "nSolutions": 12
    }
}