{
    "status": "SATISFIED",
    "solution": {
        "objective": 0.8091950142538405,
        "start_time": [
            [
                100,
                188,
                170,
                108,
                93,
                290,
                90,
                133,
                294,
                279,
                180,
                147,
                272,
                101,
                285,
                220,
                116,
                307,
                265,
                252
            ],
            [
                178,
                90,
                283,
                255,
                213,
                166,
                123,
                155,
                77,
                238,
                157,
                247,
                6,
                27,
                228,
                0,
                22,
                67,
                11,
                43
            ],
            [
                158,
                268,
                184,
                76,
                70,
                236,
                291,
                172,
                307,
                87,
                304,
                200,
                171,
                195,
                252,
                145,
                180,
                116,
                231,
                81
            ],
            [
                60,
                232,
                296,
                316,
                235,
                233,
                188,
                180,
                108,
                253,
                317,
                76,
                155,
                215,
                154,
                67,
                142,
                275,
                160,
                131
            ],
            [
                238,
                249,
                80,
                157,
                178,
                25,
                286,
                308,
                1,
                237,
                216,
                258,
                63,
                118,
                83,
                291,
                0,
                206,
                257,
                186
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                2,
                2,
                2,
                2,
                1,
                3,
                1,
                1,
                2,
                3,
                1,
                2,
                2,
                1,
                2,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                3,
                1,
                1,
                2,
                1
            ],
            [
                2,
                2,
                2,
                1,
                2,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                2
            ],
            [
                1,
                1,
                2,
                1,
                1,
                2,
                1,
                3,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1
            ],
            [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                2,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.08700980392156864 + E-0.5036188178528359 + T-0.218566392479436 = 0.8091950142538405 \nObjective function : M-318.0 + E-8745.0 + T-558.0 = 0.8091950142538405 \nStart Times: [100, 188, 170, 108, 93, 290, 90, 133, 294, 279, 180, 147, 272, 101, 285, 220, 116, 307, 265, 252, 178, 90, 283, 255, 213, 166, 123, 155, 77, 238, 157, 247, 6, 27, 228, 0, 22, 67, 11, 43, 158, 268, 184, 76, 70, 236, 291, 172, 307, 87, 304, 200, 171, 195, 252, 145, 180, 116, 231, 81, 60, 232, 296, 316, 235, 233, 188, 180, 108, 253, 317, 76, 155, 215, 154, 67, 142, 275, 160, 131, 238, 249, 80, 157, 178, 25, 286, 308, 1, 237, 216, 258, 63, 118, 83, 291, 0, 206, 257, 186]\nSpeed Scaling; [1, 1, 2, 2, 2, 2, 1, 3, 1, 1, 2, 3, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 3, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1297,
        "flatFloatVars": 102,
        "flatIntConstraints": 2370,
        "flatFloatConstraints": 102,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 229.187,
        "objective": 0.809195014254,
        "objectiveBound": 0.805583954615,
        "nodes": 29941,
        "openNodes": 9063,
        "solveTime": 57304.0,
        "time": 52253.0,
        "nSolutions": 21
    }
}