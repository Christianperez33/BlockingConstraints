{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.6062271175897952,
        "start_time": [
            [
                504,
                273,
                1310,
                1019,
                1369,
                379,
                0,
                447,
                73,
                1411,
                174,
                1258,
                114,
                318,
                651,
                891,
                1465,
                1172,
                786,
                1124
            ],
            [
                705,
                956,
                1058,
                194,
                70,
                647,
                581,
                871,
                481,
                308,
                1434,
                1371,
                1147,
                272,
                835,
                774,
                230,
                383,
                1256,
                1310
            ],
            [
                232,
                1171,
                1390,
                1431,
                741,
                1261,
                1076,
                1000,
                207,
                383,
                521,
                689,
                793,
                582,
                60,
                843,
                1128,
                635,
                1346,
                876
            ],
            [
                1028,
                745,
                867,
                809,
                1173,
                104,
                1274,
                509,
                349,
                937,
                455,
                1075,
                641,
                409,
                1321,
                584,
                60,
                275,
                892,
                162
            ],
            [
                1308,
                1261,
                994,
                100,
                267,
                522,
                725,
                644,
                914,
                194,
                771,
                1189,
                1387,
                681,
                1434,
                1083,
                436,
                875,
                1040,
                297
            ]
        ],
        "SpeedScaling": [
            [
                1,
                4,
                1,
                1,
                3,
                1,
                2,
                2,
                2,
                2,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                2
            ],
            [
                2,
                1,
                1,
                4,
                1,
                1,
                2,
                1,
                1,
                1,
                2,
                2,
                1,
                3,
                2,
                3,
                4,
                1,
                2,
                2
            ],
            [
                1,
                1,
                2,
                2,
                2,
                1,
                2,
                1,
                1,
                1,
                2,
                2,
                3,
                3,
                1,
                2,
                2,
                1,
                2,
                1
            ],
            [
                2,
                2,
                1,
                2,
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                1
            ],
            [
                1,
                2,
                2,
                1,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                2,
                2,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.07939040931939681 + E-0.4250559284116322 + T-0.1017807798587662 = 0.6062271175897952 \nObjective function : M-1490.0 + E-5102.0 + T-1326.000000000006 = 0.6062271175897952 \nStart Times: [504, 273, 1310, 1019, 1369, 379, 0, 447, 73, 1411, 174, 1258, 114, 318, 651, 891, 1465, 1172, 786, 1124, 705, 956, 1058, 194, 70, 647, 581, 871, 481, 308, 1434, 1371, 1147, 272, 835, 774, 230, 383, 1256, 1310, 232, 1171, 1390, 1431, 741, 1261, 1076, 1000, 207, 383, 521, 689, 793, 582, 60, 843, 1128, 635, 1346, 876, 1028, 745, 867, 809, 1173, 104, 1274, 509, 349, 937, 455, 1075, 641, 409, 1321, 584, 60, 275, 892, 162, 1308, 1261, 994, 100, 267, 522, 725, 644, 914, 194, 771, 1189, 1387, 681, 1434, 1083, 436, 875, 1040, 297]\nSpeed Scaling; [1, 4, 1, 1, 3, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 4, 1, 1, 2, 1, 1, 1, 2, 2, 1, 3, 2, 3, 4, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 3, 3, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1537,
        "flatFloatVars": 110,
        "flatIntConstraints": 2402,
        "flatFloatConstraints": 110,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 251.031,
        "objective": 0.60622711759,
        "objectiveBound": 0.60622711759,
        "nodes": 118544,
        "solveTime": 113763.40000000001,
        "time": 113866.0,
        "openNodes": 606,
        "nSolutions": 34
    }
}