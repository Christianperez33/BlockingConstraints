{
    "status": "SATISFIED",
    "solution": {
        "objective": 0.736867295712872,
        "start_time": [
            [
                147,
                975,
                463,
                943,
                686,
                1162,
                770,
                1432,
                0,
                322,
                1371,
                1533,
                1245,
                663,
                175,
                1670,
                577,
                253,
                1497,
                1624
            ],
            [
                590,
                185,
                367,
                559,
                922,
                233,
                1063,
                781,
                1267,
                1227,
                75,
                391,
                648,
                1127,
                1193,
                302,
                1142,
                10,
                1001,
                451
            ],
            [
                112,
                301,
                1034,
                692,
                778,
                722,
                868,
                537,
                753,
                221,
                488,
                622,
                609,
                145,
                458,
                367,
                414,
                917,
                30,
                1107
            ],
            [
                1018,
                421,
                331,
                605,
                219,
                823,
                131,
                1099,
                533,
                80,
                771,
                728,
                556,
                881,
                1284,
                246,
                474,
                1239,
                929,
                282
            ],
            [
                756,
                1222,
                1328,
                260,
                1239,
                901,
                535,
                849,
                623,
                406,
                1188,
                664,
                953,
                445,
                203,
                1089,
                1001,
                706,
                1258,
                50
            ]
        ],
        "SpeedScaling": [
            [
                3,
                1,
                2,
                3,
                2,
                2,
                2,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                2,
                2,
                5,
                3,
                2,
                1,
                2,
                2,
                2,
                1,
                2,
                2,
                1,
                2,
                1,
                1,
                3,
                1,
                1,
                1
            ],
            [
                3,
                2,
                2,
                2,
                2,
                1,
                2,
                1,
                3,
                2,
                2,
                2,
                5,
                1,
                2,
                3,
                2,
                2,
                2,
                1
            ],
            [
                2,
                2,
                2,
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                2,
                2,
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                3
            ],
            [
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                2,
                2,
                3,
                2,
                4,
                2,
                2,
                2,
                2,
                1,
                2,
                2,
                2
            ]
        ],
        "_output_item": "Objective function normalized: M-0.08331475287997027 + E-0.5666392431098314 + T-0.08691329972307037 = 0.736867295712872 \nObjective function: M-1749.0 + E-5688.0 + T-1224.0 = 0.736867295712872 \nStart Times: [147, 975, 463, 943, 686, 1162, 770, 1432, 0, 322, 1371, 1533, 1245, 663, 175, 1670, 577, 253, 1497, 1624, 590, 185, 367, 559, 922, 233, 1063, 781, 1267, 1227, 75, 391, 648, 1127, 1193, 302, 1142, 10, 1001, 451, 112, 301, 1034, 692, 778, 722, 868, 537, 753, 221, 488, 622, 609, 145, 458, 367, 414, 917, 30, 1107, 1018, 421, 331, 605, 219, 823, 131, 1099, 533, 80, 771, 728, 556, 881, 1284, 246, 474, 1239, 929, 282, 756, 1222, 1328, 260, 1239, 901, 535, 849, 623, 406, 1188, 664, 953, 445, 203, 1089, 1001, 706, 1258, 50]\nSpeed Scaling; [3, 1, 2, 3, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 3, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 1, 3, 1, 1, 1, 3, 2, 2, 2, 2, 1, 2, 1, 3, 2, 2, 2, 5, 1, 2, 3, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 3, 1, 2, 2, 1, 2, 1, 2, 2, 2, 3, 2, 4, 2, 2, 2, 2, 1, 2, 2, 2]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 2097,
        "flatFloatVars": 204,
        "flatIntConstraints": 3147,
        "flatFloatConstraints": 204,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 270.61400000000003,
        "objective": 0.736867295713,
        "objectiveBound": 0.727601163591,
        "nodes": 10753,
        "solveTime": 204951.4,
        "time": 26855.0,
        "openNodes": 1657,
        "nSolutions": 47
    }
}