{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.81699797541327,
        "start_time": [
            [
                239,
                173,
                226,
                272,
                300,
                101,
                186,
                123,
                289,
                70,
                194,
                83,
                253,
                313,
                97,
                103,
                154,
                304,
                213,
                127
            ],
            [
                13,
                147,
                0,
                116,
                121,
                246,
                75,
                63,
                264,
                172,
                215,
                105,
                284,
                210,
                229,
                70,
                26,
                133,
                48,
                197
            ],
            [
                40,
                224,
                135,
                291,
                102,
                118,
                237,
                260,
                156,
                263,
                68,
                54,
                312,
                216,
                262,
                271,
                270,
                192,
                145,
                179
            ],
            [
                217,
                218,
                111,
                0,
                74,
                29,
                196,
                49,
                240,
                286,
                258,
                213,
                18,
                145,
                63,
                235,
                95,
                37,
                121,
                221
            ],
            [
                308,
                240,
                183,
                131,
                163,
                71,
                69,
                297,
                197,
                60,
                120,
                253,
                96,
                281,
                151,
                254,
                284,
                227,
                226,
                268
            ]
        ],
        "SpeedScaling": [
            [
                1,
                5,
                2,
                2,
                1,
                1,
                2,
                1,
                2,
                1,
                1,
                4,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1
            ],
            [
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                2,
                1
            ],
            [
                3,
                1,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                3,
                4,
                2,
                1,
                1,
                2,
                1,
                1,
                2
            ],
            [
                1,
                1,
                2,
                1,
                1,
                5,
                1,
                2,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                2,
                4,
                1,
                1,
                2,
                1,
                4,
                1,
                1,
                1,
                1,
                2,
                2,
                1,
                5,
                2,
                5
            ]
        ],
        "_output_item": "Objective function normalized: M-0.08852181279119017 + E-0.4581072935503329 + T-0.270368869071747 = 0.81699797541327 \nObjective function : M-315.0 + E-8680.0 + T-666.9999999999998 = 0.81699797541327 \nStart Times: [239, 173, 226, 272, 300, 101, 186, 123, 289, 70, 194, 83, 253, 313, 97, 103, 154, 304, 213, 127, 13, 147, 0, 116, 121, 246, 75, 63, 264, 172, 215, 105, 284, 210, 229, 70, 26, 133, 48, 197, 40, 224, 135, 291, 102, 118, 237, 260, 156, 263, 68, 54, 312, 216, 262, 271, 270, 192, 145, 179, 217, 218, 111, 0, 74, 29, 196, 49, 240, 286, 258, 213, 18, 145, 63, 235, 95, 37, 121, 221, 308, 240, 183, 131, 163, 71, 69, 297, 197, 60, 120, 253, 96, 281, 151, 254, 284, 227, 226, 268]\nSpeed Scaling; [1, 5, 2, 2, 1, 1, 2, 1, 2, 1, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 4, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 5, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 1, 1, 2, 1, 4, 1, 1, 1, 1, 2, 2, 1, 5, 2, 5]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1516,
        "flatFloatVars": 107,
        "flatIntConstraints": 2390,
        "flatFloatConstraints": 107,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 260.683,
        "objective": 0.816997975413,
        "objectiveBound": 0.816997975413,
        "nodes": 23216,
        "solveTime": 21428.6,
        "time": 20672.0,
        "openNodes": 1009,
        "nSolutions": 16
    }
}