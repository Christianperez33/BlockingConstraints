{
    "status": "SATISFIED",
    "solution": {
        "objective": 0.9672394911594435,
        "start_time": [
            [
                163,
                639,
                589,
                789,
                208,
                50,
                413,
                287,
                372,
                1010
            ],
            [
                30,
                470,
                742,
                378,
                297,
                653,
                712,
                351,
                84,
                144
            ],
            [
                566,
                318,
                452,
                263,
                1019,
                690,
                364,
                705,
                411,
                547
            ],
            [
                134,
                285,
                234,
                553,
                324,
                698,
                514,
                80,
                190,
                738
            ],
            [
                700,
                751,
                150,
                650,
                718,
                595,
                50,
                421,
                511,
                341
            ],
            [
                850,
                503,
                383,
                127,
                184,
                413,
                324,
                597,
                212,
                108
            ],
            [
                973,
                97,
                255,
                204,
                809,
                234,
                565,
                370,
                1071,
                689
            ],
            [
                195,
                555,
                509,
                0,
                613,
                981,
                455,
                582,
                313,
                69
            ],
            [
                815,
                606,
                302,
                228,
                105,
                475,
                670,
                53,
                854,
                289
            ],
            [
                10,
                50,
                1081,
                470,
                144,
                337,
                209,
                387,
                732,
                252
            ],
            [
                726,
                1001,
                713,
                772,
                137,
                924,
                167,
                233,
                104,
                60
            ],
            [
                713,
                823,
                682,
                155,
                20,
                444,
                220,
                102,
                430,
                393
            ],
            [
                338,
                241,
                356,
                88,
                563,
                20,
                607,
                498,
                59,
                328
            ],
            [
                760,
                680,
                826,
                363,
                252,
                614,
                420,
                325,
                133,
                203
            ],
            [
                105,
                425,
                548,
                589,
                369,
                129,
                732,
                260,
                659,
                455
            ],
            [
                619,
                140,
                419,
                879,
                347,
                517,
                801,
                1085,
                393,
                213
            ],
            [
                658,
                902,
                726,
                742,
                772,
                835,
                1078,
                10,
                597,
                883
            ],
            [
                488,
                702,
                801,
                303,
                49,
                556,
                793,
                828,
                440,
                127
            ],
            [
                70,
                455,
                620,
                179,
                471,
                117,
                857,
                141,
                257,
                402
            ],
            [
                260,
                548,
                521,
                699,
                597,
                804,
                489,
                150,
                556,
                301
            ]
        ],
        "SpeedScaling": [
            [
                1,
                2,
                3,
                1,
                2,
                2,
                2,
                2,
                2,
                1
            ],
            [
                2,
                3,
                2,
                1,
                3,
                3,
                3,
                2,
                3,
                2
            ],
            [
                3,
                2,
                2,
                3,
                1,
                3,
                2,
                2,
                3,
                2
            ],
            [
                2,
                2,
                2,
                2,
                3,
                3,
                2,
                2,
                2,
                1
            ],
            [
                3,
                1,
                2,
                2,
                2,
                3,
                2,
                2,
                2,
                2
            ],
            [
                1,
                2,
                2,
                3,
                2,
                2,
                1,
                1,
                3,
                2
            ],
            [
                2,
                2,
                2,
                3,
                1,
                2,
                1,
                2,
                1,
                1
            ],
            [
                2,
                3,
                3,
                2,
                2,
                1,
                3,
                3,
                2,
                3
            ],
            [
                3,
                2,
                2,
                3,
                3,
                3,
                2,
                2,
                2,
                3
            ],
            [
                2,
                2,
                2,
                2,
                3,
                2,
                2,
                2,
                2,
                3
            ],
            [
                2,
                1,
                3,
                2,
                3,
                2,
                2,
                2,
                2,
                2
            ],
            [
                3,
                2,
                3,
                3,
                2,
                3,
                2,
                2,
                2,
                2
            ],
            [
                2,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                2,
                2,
                2,
                2,
                2,
                3,
                3,
                2,
                2,
                3
            ],
            [
                2,
                2,
                3,
                1,
                2,
                2,
                2,
                2,
                1,
                1
            ],
            [
                3,
                2,
                3,
                1,
                2,
                3,
                2,
                1,
                2,
                3
            ],
            [
                3,
                1,
                3,
                2,
                2,
                1,
                2,
                2,
                2,
                2
            ],
            [
                2,
                2,
                2,
                2,
                2,
                3,
                2,
                1,
                2,
                3
            ],
            [
                2,
                2,
                2,
                3,
                2,
                2,
                1,
                2,
                2,
                2
            ],
            [
                1,
                3,
                3,
                1,
                2,
                2,
                3,
                2,
                2,
                2
            ]
        ],
        "_output_item": "Objective function normalized: M-0.02973803071364046 + E-0.8080703569580958 + T-0.1294311034877073 = 0.9672394911594435 \nObjective function: M-1132.0 + E-13771.0 + T-3622.0 = 0.9672394911594435 \nStart Times: [163, 639, 589, 789, 208, 50, 413, 287, 372, 1010, 30, 470, 742, 378, 297, 653, 712, 351, 84, 144, 566, 318, 452, 263, 1019, 690, 364, 705, 411, 547, 134, 285, 234, 553, 324, 698, 514, 80, 190, 738, 700, 751, 150, 650, 718, 595, 50, 421, 511, 341, 850, 503, 383, 127, 184, 413, 324, 597, 212, 108, 973, 97, 255, 204, 809, 234, 565, 370, 1071, 689, 195, 555, 509, 0, 613, 981, 455, 582, 313, 69, 815, 606, 302, 228, 105, 475, 670, 53, 854, 289, 10, 50, 1081, 470, 144, 337, 209, 387, 732, 252, 726, 1001, 713, 772, 137, 924, 167, 233, 104, 60, 713, 823, 682, 155, 20, 444, 220, 102, 430, 393, 338, 241, 356, 88, 563, 20, 607, 498, 59, 328, 760, 680, 826, 363, 252, 614, 420, 325, 133, 203, 105, 425, 548, 589, 369, 129, 732, 260, 659, 455, 619, 140, 419, 879, 347, 517, 801, 1085, 393, 213, 658, 902, 726, 742, 772, 835, 1078, 10, 597, 883, 488, 702, 801, 303, 49, 556, 793, 828, 440, 127, 70, 455, 620, 179, 471, 117, 857, 141, 257, 402, 260, 548, 521, 699, 597, 804, 489, 150, 556, 301]\nSpeed Scaling; [1, 2, 3, 1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 1, 3, 3, 3, 2, 3, 2, 3, 2, 2, 3, 1, 3, 2, 2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 1, 3, 1, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 1, 1, 3, 2, 2, 2, 2, 3, 1, 2, 1, 2, 1, 1, 2, 3, 3, 2, 2, 1, 3, 3, 2, 3, 3, 2, 2, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 1, 3, 2, 3, 2, 2, 2, 2, 2, 3, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 2, 2, 3, 1, 2, 2, 2, 2, 1, 1, 3, 2, 3, 1, 2, 3, 2, 1, 2, 3, 3, 1, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 3, 2, 2, 2, 3, 2, 2, 1, 2, 2, 2, 1, 3, 3, 1, 2, 2, 3, 2, 2, 2]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 6801,
        "flatFloatVars": 404,
        "flatIntConstraints": 9801,
        "flatFloatConstraints": 404,
        "evaluatedHalfReifiedConstraints": 3800,
        "method": "minimize",
        "flatTime": 844.412,
        "objective": 0.967239491159,
        "objectiveBound": 0.663369904273,
        "nodes": 5595,
        "openNodes": 4103,
        "solveTime": 131279.0,
        "time": 132049.0,
        "nSolutions": 14
    }
}