{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.8007786552375067,
        "start_time": [
            [
                105,
                217,
                192,
                115,
                94,
                301,
                90,
                140,
                307,
                287,
                206,
                160,
                280,
                106,
                293,
                228,
                126,
                320,
                273,
                260
            ],
            [
                211,
                95,
                292,
                269,
                223,
                199,
                128,
                160,
                82,
                248,
                162,
                261,
                11,
                32,
                238,
                0,
                27,
                72,
                16,
                48
            ],
            [
                197,
                286,
                227,
                94,
                70,
                257,
                305,
                211,
                321,
                126,
                318,
                243,
                210,
                238,
                273,
                184,
                223,
                155,
                253,
                99
            ],
            [
                60,
                235,
                307,
                327,
                246,
                236,
                191,
                180,
                108,
                264,
                328,
                76,
                155,
                218,
                154,
                67,
                142,
                286,
                160,
                131
            ],
            [
                245,
                260,
                87,
                164,
                185,
                25,
                297,
                319,
                1,
                244,
                223,
                269,
                63,
                125,
                90,
                302,
                0,
                213,
                268,
                193
            ]
        ],
        "SpeedScaling": [
            [
                1,
                2,
                2,
                2,
                2,
                2,
                1,
                3,
                1,
                1,
                2,
                3,
                1,
                2,
                2,
                1,
                4,
                1,
                1,
                1
            ],
            [
                2,
                1,
                1,
                4,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                3,
                1
            ],
            [
                3,
                4,
                3,
                1,
                1,
                1,
                1,
                2,
                3,
                1,
                1,
                2,
                1,
                1,
                4,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                3,
                1,
                1,
                1,
                1,
                3,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                1,
                1,
                1
            ],
            [
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                3,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.09272875816993466 + E-0.4644149577804588 + T-0.2436349392871132 = 0.8007786552375067 \nObjective function : M-332.0 + E-8680.0 + T-622.0 = 0.8007786552375067 \nStart Times: [105, 217, 192, 115, 94, 301, 90, 140, 307, 287, 206, 160, 280, 106, 293, 228, 126, 320, 273, 260, 211, 95, 292, 269, 223, 199, 128, 160, 82, 248, 162, 261, 11, 32, 238, 0, 27, 72, 16, 48, 197, 286, 227, 94, 70, 257, 305, 211, 321, 126, 318, 243, 210, 238, 273, 184, 223, 155, 253, 99, 60, 235, 307, 327, 246, 236, 191, 180, 108, 264, 328, 76, 155, 218, 154, 67, 142, 286, 160, 131, 245, 260, 87, 164, 185, 25, 297, 319, 1, 244, 223, 269, 63, 125, 90, 302, 0, 213, 268, 193]\nSpeed Scaling; [1, 2, 2, 2, 2, 2, 1, 3, 1, 1, 2, 3, 1, 2, 2, 1, 4, 1, 1, 1, 2, 1, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 3, 4, 3, 1, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1481,
        "flatFloatVars": 102,
        "flatIntConstraints": 2370,
        "flatFloatConstraints": 102,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 250.266,
        "objective": 0.800778655238,
        "objectiveBound": 0.800778655238,
        "nodes": 24124,
        "solveTime": 41055.3,
        "time": 38960.0,
        "openNodes": 2051,
        "nSolutions": 22
    }
}