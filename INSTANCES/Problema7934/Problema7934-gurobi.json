{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.7546515868839301,
        "start_time": [
            [
                30,
                165,
                89,
                227,
                239,
                166,
                229,
                279,
                273,
                64,
                48,
                143,
                189,
                148,
                103,
                215,
                75,
                121,
                235,
                242
            ],
            [
                94,
                220,
                110,
                159,
                188,
                237,
                290,
                70,
                169,
                251,
                139,
                265,
                83,
                208,
                195,
                109,
                304,
                266,
                267,
                123
            ],
            [
                77,
                173,
                197,
                178,
                261,
                109,
                209,
                196,
                140,
                281,
                91,
                296,
                220,
                128,
                31,
                227,
                269,
                30,
                182,
                165
            ],
            [
                205,
                178,
                150,
                267,
                26,
                192,
                136,
                84,
                104,
                147,
                299,
                279,
                72,
                227,
                20,
                179,
                254,
                43,
                263,
                280
            ],
            [
                243,
                6,
                293,
                189,
                224,
                41,
                0,
                143,
                81,
                108,
                89,
                281,
                20,
                61,
                165,
                9,
                118,
                238,
                34,
                91
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1
            ],
            [
                5,
                1,
                3,
                1,
                2,
                1,
                1,
                2,
                1,
                5,
                1,
                2,
                1,
                3,
                1,
                1,
                1,
                1,
                5,
                5
            ],
            [
                2,
                3,
                2,
                1,
                1,
                1,
                1,
                1,
                3,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                2,
                1,
                1,
                2
            ],
            [
                1,
                1,
                2,
                1,
                2,
                1,
                1,
                2,
                2,
                1,
                2,
                4,
                1,
                1,
                1,
                3,
                1,
                1,
                2,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.08614564831261103 + E-0.4295865633074947 + T-0.2389193752638244 = 0.7546515868839301 \nObjective function : M-311.0 + E-8715.0 + T-566.0 = 0.7546515868839301 \nStart Times: [30, 165, 89, 227, 239, 166, 229, 279, 273, 64, 48, 143, 189, 148, 103, 215, 75, 121, 235, 242, 94, 220, 110, 159, 188, 237, 290, 70, 169, 251, 139, 265, 83, 208, 195, 109, 304, 266, 267, 123, 77, 173, 197, 178, 261, 109, 209, 196, 140, 281, 91, 296, 220, 128, 31, 227, 269, 30, 182, 165, 205, 178, 150, 267, 26, 192, 136, 84, 104, 147, 299, 279, 72, 227, 20, 179, 254, 43, 263, 280, 243, 6, 293, 189, 224, 41, 0, 143, 81, 108, 89, 281, 20, 61, 165, 9, 118, 238, 34, 91]\nSpeed Scaling; [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 5, 1, 3, 1, 2, 1, 1, 2, 1, 5, 1, 2, 1, 3, 1, 1, 1, 1, 5, 5, 2, 3, 2, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 4, 1, 1, 1, 3, 1, 1, 2, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1488,
        "flatFloatVars": 103,
        "flatIntConstraints": 2374,
        "flatFloatConstraints": 103,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 302.251,
        "objective": 0.754651586884,
        "objectiveBound": 0.754651586884,
        "nodes": 18007,
        "solveTime": 28458.8,
        "time": 27518.0,
        "openNodes": 703,
        "nSolutions": 24
    }
}