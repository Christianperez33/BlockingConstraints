{
    "status": "OPTIMAL_SOLUTION",
    "solution": {
        "objective": 0.5981890218046788,
        "start_time": [
            [
                1249,
                952,
                232,
                1037,
                1327,
                1144,
                316,
                914,
                550,
                594,
                717,
                775,
                20,
                108,
                65,
                501,
                1201,
                433,
                871,
                361
            ],
            [
                495,
                1082,
                925,
                265,
                830,
                703,
                1310,
                316,
                971,
                1186,
                1375,
                669,
                434,
                534,
                166,
                369,
                627,
                770,
                0,
                879
            ],
            [
                891,
                204,
                775,
                118,
                326,
                1333,
                927,
                560,
                503,
                60,
                528,
                703,
                380,
                1108,
                434,
                1377,
                266,
                1215,
                603,
                992
            ],
            [
                1335,
                1393,
                100,
                204,
                262,
                564,
                1190,
                158,
                10,
                720,
                1125,
                355,
                324,
                627,
                1027,
                865,
                458,
                923,
                812,
                1282
            ],
            [
                932,
                1213,
                990,
                696,
                879,
                634,
                549,
                486,
                421,
                1096,
                124,
                1260,
                65,
                307,
                60,
                1028,
                1364,
                1153,
                255,
                751
            ]
        ],
        "SpeedScaling": [
            [
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                2,
                2,
                2,
                2,
                2,
                2
            ],
            [
                2,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                2,
                3,
                1,
                1,
                1,
                2,
                2,
                3,
                1,
                2
            ],
            [
                2,
                2,
                1,
                1,
                2,
                2,
                2,
                2,
                1,
                2,
                1,
                2,
                3,
                1,
                1,
                1,
                2,
                1,
                1,
                1
            ],
            [
                3,
                2,
                2,
                2,
                2,
                2,
                1,
                2,
                1,
                1,
                2,
                1,
                3,
                1,
                1,
                2,
                1,
                1,
                2,
                2
            ],
            [
                2,
                2,
                1,
                2,
                2,
                2,
                1,
                3,
                1,
                2,
                1,
                1,
                2,
                1,
                4,
                1,
                2,
                3,
                1,
                1
            ]
        ],
        "_output_item": "Objective function normalized: M-0.07265388496468214 + E-0.4468255557780894 + T-0.07870958106190726 = 0.5981890218046788 \nObjective function : M-1444.0 + E-5119.0 + T-1054.0 = 0.5981890218046788 \nStart Times: [1249, 952, 232, 1037, 1327, 1144, 316, 914, 550, 594, 717, 775, 20, 108, 65, 501, 1201, 433, 871, 361, 495, 1082, 925, 265, 830, 703, 1310, 316, 971, 1186, 1375, 669, 434, 534, 166, 369, 627, 770, 0, 879, 891, 204, 775, 118, 326, 1333, 927, 560, 503, 60, 528, 703, 380, 1108, 434, 1377, 266, 1215, 603, 992, 1335, 1393, 100, 204, 262, 564, 1190, 158, 10, 720, 1125, 355, 324, 627, 1027, 865, 458, 923, 812, 1282, 932, 1213, 990, 696, 879, 634, 549, 486, 421, 1096, 124, 1260, 65, 307, 60, 1028, 1364, 1153, 255, 751]\nSpeed Scaling; [1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 3, 1, 1, 1, 2, 2, 3, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 3, 1, 1, 1, 2, 1, 1, 1, 3, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 3, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 3, 1, 2, 1, 1, 2, 1, 4, 1, 2, 3, 1, 1]\n",
        "_checker": ""
    },
    "statistics": {
        "paths": 0,
        "flatIntVars": 1537,
        "flatFloatVars": 110,
        "flatIntConstraints": 2402,
        "flatFloatConstraints": 110,
        "evaluatedHalfReifiedConstraints": 400,
        "method": "minimize",
        "flatTime": 204.44899999999998,
        "objective": 0.598189021805,
        "objectiveBound": 0.598189021805,
        "nodes": 40507,
        "solveTime": 39589.6,
        "time": 26602.0,
        "openNodes": 4520,
        "nSolutions": 26
    }
}